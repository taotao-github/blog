(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{489:function(s,t,a){"use strict";a.r(t);var n=a(46),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_3-执行上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行上下文"}},[s._v("#")]),s._v(" 3. 执行上下文")]),s._v(" "),a("blockquote",[a("p",[s._v("JavaScript代码在执行时，会进入一个执行上下文中。执行上下文可以理解为当前代码的运行环境。")])]),s._v(" "),a("p",[s._v("JavaScript的运行环境主要包括以下三种情况：")]),s._v(" "),a("ol",[a("li",[s._v("全局环境：代码运行首先会进入全局环境。")]),s._v(" "),a("li",[s._v("函数环境：当函数被调用时，会进入当前函数中执行代码。")]),s._v(" "),a("li",[s._v("eval环境：不推荐，垃圾！")])]),s._v(" "),a("p",[s._v("因此，在一个JavaScript程序中，必定会出现多个执行上下文。JavaScript引擎会以栈的方式处理这些执行上下文，这个栈就是前面提到的函数调用栈，函数调用规定了执行上下文的执行顺序，栈底永远是全局上下文（代码执行首先会进入全局环境），栈顶永远是当前正在执行的上下文。")]),s._v(" "),a("h2",{attrs:{id:"_3-1-执行上下文实例1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-执行上下文实例1"}},[s._v("#")]),s._v(" 3.1 执行上下文实例1")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// demo01.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" color "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'blue'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("changeColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" anotherColor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("swapColors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" tempColor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" anotherColor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    anotherColor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    color "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" tempColor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行swapColors")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("swapColors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行changeColor")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("changeColor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ol",[a("li",[s._v("全局上下文进栈，并一直存于栈底")]),s._v(" "),a("li",[s._v("全局上下文入栈后，执行可执行代码，直到遇到changeColor()，这句代码激活了函数changeColor，函数changeColor创建自己的执行上下文（changeColor EC） 并入栈。")]),s._v(" "),a("li",[s._v("changeColor EC入栈后开始执行自己可执行代码，直到遇见swapColors()，又激活swapColors的执行上下文（swapColors EC），并入栈")]),s._v(" "),a("li",[s._v("swapColors EC入栈后，执行自己的可执行代码，执行完毕后没有产生其它的执行上下文（顺利执行），然后swapColors EC出栈。")]),s._v(" "),a("li",[s._v("swapColors EC出栈后，changeColor EC继续向下执行，没有产生其他执行上下文，顺利执行完毕，然后changeColor EC出栈")]),s._v(" "),a("li",[s._v("changeColor EC出栈后，栈空间就只剩下全局上下文了。最后，全局上下文在浏览器窗口关闭后出栈。")])]),s._v(" "),a("img",{attrs:{src:s.$withBase("/images/javascript核心技术开发/实例1执行上下文.png"),alt:"实例1执行上下文"}}),s._v(" "),a("h2",{attrs:{id:"_3-2-执行上下文实例2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-执行上下文实例2"}},[s._v("#")]),s._v(" 3.2 执行上下文实例2")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// demo02.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("999")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("这是一个简单的闭包案例，我们根据“函数执行时才会创建执行上下文”这一原则，就段代码执行时的函数调用栈顺序就比较清晰了。")]),s._v(" "),a("ol",[a("li",[s._v("全局上下文入栈")]),s._v(" "),a("li",[s._v("全局上下文入栈后，开始执行代码，当遇到var result = f1();时，创建f1的执行上下文（f1 EC），并入栈")]),s._v(" "),a("li",[s._v("f1 EC入栈后，开始执行代码，顺利执行，没有产生其它执行上下文，执行结束，然后出栈。")]),s._v(" "),a("li",[s._v("f1 EC出栈后，全局上下文继续执行，遇到result();时，创建result的执行上下文（result EC），并入栈。")]),s._v(" "),a("li",[s._v("result EC入栈后开始执行代码，并没有产生新的执行上下文，然后result EC执行结束出栈")]),s._v(" "),a("li",[s._v("result EC出栈后，栈空间就只剩下全局上下文了。最后，全局上下文在浏览器窗口关闭后出栈。")])]),s._v(" "),a("img",{attrs:{src:s.$withBase("/images/javascript核心技术开发/实例2执行上下文.png"),alt:"实例2执行上下文"}}),s._v(" "),a("h2",{attrs:{id:"_3-3-执行上下文生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-执行上下文生命周期"}},[s._v("#")]),s._v(" 3.3 执行上下文生命周期")]),s._v(" "),a("blockquote",[a("p",[s._v("当一个函数调用时，一个新的执行上下文就会被创建。一个执行上下文的生命周期大致分为连个阶段：创建阶段和执行阶段")])]),s._v(" "),a("h3",{attrs:{id:"创建阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建阶段"}},[s._v("#")]),s._v(" 创建阶段")]),s._v(" "),a("p",[s._v("这个阶段，执行上下文会分别创建变量对象、确定作用域链和确定this的指向。")]),s._v(" "),a("h3",{attrs:{id:"执行阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行阶段"}},[s._v("#")]),s._v(" 执行阶段")]),s._v(" "),a("p",[s._v("创建阶段完成以后，就开始执行代码。这个期间会完成变量赋值、函数引用、以及执行其他可执行代码。")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/images/javascript核心技术开发/执行上下文生命周期.png"),alt:"执行上下文生命周期"}})])}),[],!1,null,null,null);t.default=r.exports}}]);